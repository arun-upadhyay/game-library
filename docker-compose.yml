version: "3.7"
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile.backend
    working_dir: /var/www/
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    depends_on:
      - db
    volumes:
      - /var/www/vendor
      - ./back-end-api/public:/var/www/public
  db:
    image: mysql:5.5
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker-compose/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - 3307:3306

  nginx:
    image: nginx:alpine
    ports:
      - 8005:80
    depends_on:
      - db
      - app
    volumes:
      - ./back-end-api/public:/var/www/public
      - ./docker-compose/nginx:/etc/nginx/conf.d/

  web-prod:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    ports:
      - 1337:80
  web-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    ports:
      - "3012:3000"
    volumes:
      - "/app/node_modules"
      - "./front-end:/app"
volumes:
  dbdata:
    driver: local